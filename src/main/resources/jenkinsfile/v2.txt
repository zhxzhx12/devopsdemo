pipeline {

  agent any
  // def gradleHome

    environment {
        gradleHome = script{tool 'mylocalGradle'}
   }

    stages {

      stage('Checkout Git') {
            steps {
              git 'https://github.com/zhxzhx12/devopsdemo.git'
            }
      }

      stage('Build') {
          steps {
            script {
              if (isUnix()) {
                sh "'${gradleHome}/bin/gradle' clean build jar -x test -x war"
              } else {
                // bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
              }
            }
          }
      }

      stage('Test ') {
          steps {
            sh "'${gradleHome}/bin/gradle' test "
          }

          post{
            always{
                echo "alway post below steps"
            }
            failure{
                echo "got some test error"
            }
          }
      }

      stage("Build Docker and Run"){
        	steps{
                dir('build/resources/main/dockerfile'){
                  script{
                    def customImage = docker.build("zhx12/devopsdemo:0.2")
                    echo customImage.imageName()
                    customImage.run("-p 5050:8080")
                  }
             }
        	}
      }

    }

    post {
        always {
          dir("build/test-results/test"){
            junit 'TEST-*.xml'
          }
        }
        failure {
            //mail to: team@example.com, subject: 'The Pipeline failed :('
            echo "got some  error"
        }
      }

}

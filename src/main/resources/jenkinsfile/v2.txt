pipeline {

  agent any
  // def gradleHome

    environment {
        gradleHome = script{tool 'mylocalGradle'}
   }

    stages {

      stage('Checkout Git') {
            steps {
              git 'https://github.com/zhxzhx12/devopsdemo.git'
            }
      }

      stage('Build') {
          steps {
            script {
              if (isUnix()) {
                sh "'${gradleHome}/bin/gradle' clean build -x test"
              } else {
                // bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
              }
            }
          }
      }

      stage('Test ') {
          steps {
            sh "'${gradleHome}/bin/gradle' test "
          }

          post{
            always{
                echo "alway post below steps"
            }
            failure{
                echo "got some test error"
            }
          }
      }

      stage("Build Docker and Run"){
        	steps{
                sh "'${gradleHome}/bin/gradle' copyJar "
                dir('build/resources/main/dockerfile'){

                docker stop devops_web_demo || true
                docker rm devops_web_demo || true
                
                  script{
                        sh " docker stop \$( docker ps -q)") || true
                        sh " docker rm \$( docker ps -aq)")  || true

                        echo "try to remove again"


                      try{
                           sh " docker stop \$( docker ps -q)"
                           sh " docker rm \$( docker ps -aq)"
                       }catch(error){
                            echo "get some error when rm container"
                       }

                      def customImage = docker.build("zhx12/devopsdemo:0.2")
                      echo customImage.imageName()
                      customImage.run("-p 5050:8080")
                  }
             }
        	}
      }

    }

    post {
        always {
          dir("build/test-results/test"){
            junit 'TEST-*.xml'
          }
        }
        failure {
            //mail to: team@example.com, subject: 'The Pipeline failed :('
            echo "got some  error"
        }
      }

}
